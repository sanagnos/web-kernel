!function(){"use strict";function t(t,e,i){this.connection=[],this.recievedSignal=!1,this.lastSignalRelease=0,this.releaseDelay=0,this.fired=!1,this.firedCount=0,this.prevReleaseAxon=null,THREE.Vector3.call(this,t,e,i)}function e(t,e,i){this.minSpeed=e,this.maxSpeed=i,this.speed=THREE.Math.randFloat(this.minSpeed,this.maxSpeed),this.alive=!0,this.t=null,this.startingPoint=null,this.axon=null,this.particle=t.getParticle(),THREE.Vector3.call(this)}function i(t){this.spriteTextureSignal=THREE.ImageUtils.loadTexture("sprites/electric.png"),this.poolSize=t,this.pGeom=new THREE.Geometry,this.particles=this.pGeom.vertices,this.offScreenPos=new THREE.Vector3(9999,9999,9999),this.pColor=16729088,this.pSize=.6;for(var e=0;e<this.poolSize;e++)this.particles[e]=new n(this);this.pMat=new THREE.PointCloudMaterial({map:this.spriteTextureSignal,size:this.pSize,color:this.pColor,blending:THREE.AdditiveBlending,depthTest:!1,transparent:!0}),this.pMesh=new THREE.PointCloud(this.pGeom,this.pMat),this.pMesh.frustumCulled=!1,p.add(this.pMesh),this.pMat_outer=new THREE.PointCloudMaterial({map:this.spriteTextureSignal,size:10*this.pSize,color:this.pColor,blending:THREE.AdditiveBlending,depthTest:!1,transparent:!0,opacity:.025}),this.pMesh_outer=new THREE.PointCloud(this.pGeom,this.pMat_outer),this.pMesh_outer.frustumCulled=!1,p.add(this.pMesh_outer)}function n(t){this.particlePool=t,this.available=!0,THREE.Vector3.call(this,t.offScreenPos.x,t.offScreenPos.y,t.offScreenPos.z)}function o(t,e){this.bezierSubdivision=8,this.neuronA=t,this.neuronB=e,this.cpLength=t.distanceTo(e)/THREE.Math.randFloat(1.5,4),this.controlPointA=this.getControlPoint(t,e),this.controlPointB=this.getControlPoint(e,t),THREE.CubicBezierCurve3.call(this,this.neuronA,this.controlPointA,this.controlPointB,this.neuronB),this.geom=new THREE.Geometry,this.geom.vertices=this.calculateVertices()}function s(t,e){this.axon=t,this.startingPoint=e}function a(){this.initialized=!1,this.verticesSkipStep=2,this.maxAxonDist=8,this.maxConnectionPerNeuron=6,this.currentMaxSignals=8e3,this.limitSignals=12e3,this.particlePool=new i(this.limitSignals),this.signalMinSpeed=.035,this.signalMaxSpeed=.065,this.allNeurons=[],this.allSignals=[],this.allAxons=[],this.axonOpacityMultiplier=1,this.axonColor=39423,this.axonGeom=new THREE.BufferGeometry,this.axonPositions=[],this.axonIndices=[],this.axonNextPositionsIndex=0,this.shaderUniforms={color:{type:"c",value:new THREE.Color(this.axonColor)},opacityMultiplier:{type:"f",value:1}},this.shaderAttributes={opacityAttr:{type:"f",value:[]}},this.neuronSize=.7,this.spriteTextureNeuron=THREE.ImageUtils.loadTexture("sprites/electric.png"),this.neuronColor=65535,this.neuronOpacity=1,this.neuronsGeom=new THREE.Geometry,this.neuronMaterial=new THREE.PointCloudMaterial({map:this.spriteTextureNeuron,size:this.neuronSize,color:this.neuronColor,blending:THREE.AdditiveBlending,depthTest:!1,transparent:!0,opacity:this.neuronOpacity}),this.numNeurons=0,this.numAxons=0,this.numSignals=0,this.initNeuralNetwork()}function r(){f.updateSettings()}function l(){for(var t in S.__controllers)S.__controllers[t].updateDisplay()}t.prototype=Object.create(THREE.Vector3.prototype),t.prototype.connectNeuronTo=function(t){var e=this,i=new o(e,t);return e.connection.push(new s(i,"A")),t.connection.push(new s(i,"B")),i},t.prototype.createSignal=function(t,i,n){this.firedCount+=1,this.recievedSignal=!1;for(var o=[],s=0;s<this.connection.length;s++)if(this.connection[s].axon!==this.prevReleaseAxon){var a=new e(t,i,n);a.setConnection(this.connection[s]),o.push(a)}return o},e.prototype=Object.create(THREE.Vector3.prototype),e.prototype.setConnection=function(t){this.startingPoint=t.startingPoint,this.axon=t.axon,"A"===this.startingPoint?this.t=0:"B"===this.startingPoint&&(this.t=1)},e.prototype.travel=function(){var t;"A"===this.startingPoint?(this.t+=this.speed,this.t>=1&&(this.t=1,this.alive=!1,this.axon.neuronB.recievedSignal=!0,this.axon.neuronB.prevReleaseAxon=this.axon)):"B"===this.startingPoint&&(this.t-=this.speed,this.t<=0&&(this.t=0,this.alive=!1,this.axon.neuronA.recievedSignal=!0,this.axon.neuronA.prevReleaseAxon=this.axon)),t=this.axon.getPoint(this.t),this.particle.set(t.x,t.y,t.z)},i.prototype.getParticle=function(){for(var t=0;t<this.poolSize;t++){var e=this.particles[t];if(e.available)return e.available=!1,e}return null},i.prototype.update=function(){this.pGeom.verticesNeedUpdate=!0},i.prototype.updateSettings=function(){this.pMat.color.setHex(this.pColor),this.pMat.size=this.pSize,this.pMat_outer.color.setHex(this.pColor),this.pMat_outer.size=10*this.pSize},n.prototype=Object.create(THREE.Vector3.prototype),n.prototype.free=function(){this.available=!0,this.set(this.particlePool.offScreenPos.x,this.particlePool.offScreenPos.y,this.particlePool.offScreenPos.z)},o.prototype=Object.create(THREE.CubicBezierCurve3.prototype),o.prototype.calculateVertices=function(){return this.getSpacedPoints(this.bezierSubdivision)},o.prototype.getControlPoint=function(t,e){var i=(new THREE.Vector3).copy(e).sub(t).normalize(),n=new THREE.Vector3(0,0,1),o=(new THREE.Vector3).crossVectors(n,i).normalize(),s=i.angleTo(n),a=(new THREE.Matrix4).makeRotationAxis(o,s),r=Math.cos(THREE.Math.degToRad(45)),l=THREE.Math.randFloat(r,1),h=THREE.Math.randFloat(0,2*Math.PI),u=Math.sqrt(1-l*l),p=new THREE.Vector3(u*Math.cos(h),u*Math.sin(h),l);return p.multiplyScalar(this.cpLength),p.applyMatrix4(a),p.add(t),p},a.prototype.initNeuralNetwork=function(){var t,e,i=this,n=new THREE.OBJLoader;n.load("models/brain_vertex_low.obj",function(n){t=n.children[0],e=t.geometry.vertices,t.material=new THREE.MeshBasicMaterial({transparent:!0,opacity:.05,depthTest:!1,color:35071,blending:THREE.AdditiveBlending}),p.add(n),i.initNeurons(e),i.initAxons(),i.initialized=!0,console.log("Neural Network initialized"),document.getElementById("loading").style.display="none"})},a.prototype.initNeurons=function(e){for(var i=0;i<e.length;i+=this.verticesSkipStep){var n=e[i],o=new t(n.x,n.y,n.z);this.allNeurons.push(o),this.neuronsGeom.vertices.push(o)}this.neuronParticles=new THREE.PointCloud(this.neuronsGeom,this.neuronMaterial),p.add(this.neuronParticles)},a.prototype.initAxons=function(){function t(t,e){for(v=0;v<e.length;v++)e[v]=t[v]}for(var e=this.allNeurons.length,i=0;e>i;i++)for(var n=this.allNeurons[i],o=i+1;e>o;o++){var s=this.allNeurons[o];if(n!==s&&n.distanceTo(s)<this.maxAxonDist&&n.connection.length<this.maxConnectionPerNeuron&&s.connection.length<this.maxConnectionPerNeuron){var a=n.connectNeuronTo(s);this.constructAxonArrayBuffer(a)}}var r=new Uint32Array(this.axonIndices.length),l=new Float32Array(this.axonPositions.length),h=new Float32Array(this.shaderAttributes.opacityAttr.value.length);t(this.axonIndices,r),t(this.axonPositions,l),t(this.shaderAttributes.opacityAttr.value,h),this.axonGeom.addAttribute("index",new THREE.BufferAttribute(r,1)),this.axonGeom.addAttribute("position",new THREE.BufferAttribute(l,3)),this.axonGeom.addAttribute("opacityAttr",new THREE.BufferAttribute(h,1)),this.shaderMaterial=new THREE.ShaderMaterial({uniforms:this.shaderUniforms,attributes:this.shaderAttributes,vertexShader:document.getElementById("vertexshader-axon").textContent,fragmentShader:document.getElementById("fragmentshader-axon").textContent,blending:THREE.AdditiveBlending,transparent:!0}),this.axonMesh=new THREE.Line(this.axonGeom,this.shaderMaterial,THREE.LinePieces),p.add(this.axonMesh)},a.prototype.update=function(){if(this.initialized){var t,e,i=Date.now();for(e=0;e<this.allNeurons.length;e++)t=this.allNeurons[e],this.allSignals.length<this.currentMaxSignals-this.maxConnectionPerNeuron&&t.recievedSignal&&t.firedCount<8&&(t.fired=!0,t.lastSignalRelease=i,t.releaseDelay=THREE.Math.randInt(100,1e3),this.releaseSignalAt(t)),t.recievedSignal=!1;if(this.allSignals.length<=0){for(e=0;e<this.allNeurons.length;e++)t=this.allNeurons[e],t.releaseDelay=0,t.fired=!1,t.recievedSignal=!1,t.firedCount=0;this.releaseSignalAt(this.allNeurons[THREE.Math.randInt(0,this.allNeurons.length)])}for(var n=this.allSignals.length-1;n>=0;n--){var o=this.allSignals[n];if(o.travel(),!o.alive){o.particle.free();for(var s=this.allSignals.length-1;s>=0;s--)if(o===this.allSignals[s]){this.allSignals.splice(s,1);break}}}this.particlePool.update(),this.updateInfo()}},a.prototype.constructAxonArrayBuffer=function(t){this.allAxons.push(t);for(var e=t.geom.vertices,i=e.length,n=0;i>n;n++){if(this.axonPositions.push(e[n].x,e[n].y,e[n].z),i-1>n){var o=this.axonNextPositionsIndex;this.axonIndices.push(o,o+1);var s=THREE.Math.randFloat(.002,.2);this.shaderAttributes.opacityAttr.value.push(s,s)}this.axonNextPositionsIndex+=1}},a.prototype.releaseSignalAt=function(t){for(var e=t.createSignal(this.particlePool,this.signalMinSpeed,this.signalMaxSpeed),i=0;i<e.length;i++){var n=e[i];this.allSignals.push(n)}},a.prototype.updateInfo=function(){this.numNeurons=this.allNeurons.length,this.numAxons=this.allAxons.length,this.numSignals=this.allSignals.length},a.prototype.updateSettings=function(){this.neuronMaterial.opacity=this.neuronOpacity,this.neuronMaterial.color.setHex(this.neuronColor),this.neuronMaterial.size=this.neuronSize,this.shaderUniforms.color.value.set(this.axonColor),this.shaderUniforms.opacityMultiplier.value=this.axonOpacityMultiplier,this.particlePool.updateSettings()},Detector.webgl||(Detector.addGetWebGLMessage(),document.getElementById("loading").style.display="none");var h,u,p,d,c,g;h=document.getElementById("canvas-container"),p=new THREE.Scene,d=new THREE.PerspectiveCamera(75,window.innerWidth/window.innerHeight,.1,2e3),c=new THREE.OrbitControls(d,h),c.object.position.y=150,c.update(),g=new THREE.WebGLRenderer({antialias:!0,alpha:!1}),g.setSize(window.innerWidth,window.innerHeight),h.appendChild(g.domElement),u=new Stats,h.appendChild(u.domElement);var E={pause:!1,bgColor:855311},f=window.neuralNet=new a,x=new dat.GUI;x.width=300;var S=x.addFolder("Info");S.add(f,"numNeurons").name("Neurons"),S.add(f,"numAxons").name("Axons"),S.add(f,"numSignals",0,f.limitSignals).name("Signals"),S.autoListen=!1;var m=x.addFolder("Settings");m.add(f,"currentMaxSignals",0,f.limitSignals).name("Max Signals"),m.add(f.particlePool,"pSize",.2,2).name("Signal Size"),m.add(f,"signalMinSpeed",.01,.1,.01).name("Signal Min Speed"),m.add(f,"signalMaxSpeed",.01,.1,.01).name("Signal Max Speed"),m.add(f,"neuronSize",0,2).name("Neuron Size"),m.add(f,"neuronOpacity",0,1).name("Neuron Opacity"),m.add(f,"axonOpacityMultiplier",0,5).name("Axon Opacity Mult"),m.addColor(f.particlePool,"pColor").name("Signal Color"),m.addColor(f,"neuronColor").name("Neuron Color"),m.addColor(f,"axonColor").name("Axon Color"),m.addColor(E,"bgColor").name("Background"),S.open(),m.open();for(var v in m.__controllers)m.__controllers[v].onChange(r);!function y(){requestAnimationFrame(y),g.setClearColor(E.bgColor,1),E.pause||(f.update(),l()),g.render(p,d),u.update()}(),window.addEventListener("keypress",function(t){32===t.keyCode&&(t.preventDefault(),E.pause=!E.pause)}),window.addEventListener("resize",function(){var t=window.innerWidth,e=window.innerHeight;d.aspect=t/e,d.updateProjectionMatrix(),g.setSize(t,e)},!1)}();